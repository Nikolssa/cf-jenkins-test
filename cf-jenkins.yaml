AWSTemplateFormatVersion: 2010-09-09

Description: >-
  AWS CloudFormation Template: Create a stack
  using a single EC2 instance and RDSMySQL database for storage. This
  template demonstrates using the AWS CloudFormation bootstrap scripts to
  install the packages and files necessary to deploy the Apache web server, PHP, Wordpress
  and MySQL at instances launch time.

#=======Parameters==========

Parameters:
  KeyName:
    Description: Key
    Type: AWS::EC2::KeyPair::KeyName
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC
    ConstraintDescription: exist VPC
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro]
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: subnets
    ConstraintDescription: subnets
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  DBName:
    Default: wordpress
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    NoEcho: 'true'
    Description: Username for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

#=======Mappings=======

Mappings:
  RegionMap:
    eu-central-1:
      HVM64: ami-086a09d5b9fa35dc7

#========Resources======

Resources:
  WebServerSecurityGroup:       #WebSecurityGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable ssh + http
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHLocation
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      VpcId: !Ref 'VpcId'
#  DBSecurityGroup:              #DBSecurityGroup
#    Type: AWS::EC2::SecurityGroup
#    Properties:
#      GroupDescription: Open port 3306
#      SecurityGroupIngress:
#      - IpProtocol: tcp
#        FromPort: '3306'
#        ToPort: '3306'
#        SourceSecurityGroupId: !Ref 'WebServerSecurityGroup'
#      VpcId: !Ref VpcId
#  DBSubnetGroup:                #DBSubnetGroup
#    Type: AWS::RDS::DBSubnetGroup
#    Properties:
#      DBSubnetGroupDescription: subnets
#      SubnetIds: !Ref Subnets
#  DB:                           #RDSMySQLInstance
#    Type: AWS::RDS::DBInstance
#    Properties:
#      DBName: !Ref 'DBName'
#      AllocatedStorage: '20'
#      DBInstanceClass: db.t2.micro
#      Engine: MySQL
#      EngineVersion: 5.6.39
#      MasterUsername: !Ref 'DBUser'
#      MasiterUserPassword: !Ref 'DBPassword'
#      DBSubnetGroupName: !Ref 'DBSubnetGroup'
#      MultiAZ: false
#      VPCSecurityGroups: [!GetAtt [DBSecurityGroup, GroupId]]
  WebServerInstance:            #WebServerInstance
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Configure the bootstrap helpers to install the Apache Web Server, PHP, and Wordpress
      'AWS::CloudFormation::Init':
        configSets:
          default:
            - Install
            - Configure
        Install:
          packages:          #1
            apt:
              apache2: []
              php: []
              php-mysql: []
              libapache2-mod-php: []
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init
                  - 'action=/usr/local/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WebServerInstance '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

                  - |
                    runas=root
              mode: '000400'
              owner: root
              group: root
          sources:           #3
            /var/www: "https://s3.eu-central-1.amazonaws.com/wp-artifact-frankfurt/CreateWPBuild/CreateWPBuild-1.0.BUILD_NUMBER.tar"
        Configure:
          commands:          #5
            rootdir:
              command: "sed -i 's/html/wordpress/' /etc/apache2/sites-available/000-default.conf"
              ignoreErrors: "true"
            chown:
              command: "chown -R www-data:www-data /var/www/"
              ignoreErrors: "true"
            restart:
              command: "sudo service apache2 restart"
              ignoreErrors: "true"
            createdir:
              command: "mkdir niko"
              cwd: "~"
          services:          #6
            sysvinit:
              apache2:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - "/etc/apache2/apache2.conf"
                sources:
                  - "/var/www/"
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf

    Properties:
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyName'
      SecurityGroupIds: [!Ref 'WebServerSecurityGroup']
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              apt-get update
            - |
              apt-get -y install python-pip
            - |
              export LC_ALL=C
            - |
              pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            - |
              apt-get -y install upstart
            - |
              sudo apt-get -y install upstart-sysv
            - |
              sudo ln /usr/local/bin/cfn-hup /etc/init.d/
            - |
              systemctl daemon-reload
            - |
              sudo chmod 700 /etc/init.d/cfn-hup
            - |
              sudo chown root:root /etc/init.d/cfn-hup
            - |
              sudo update-rc.d cfn-hup defaults
            - |
              sudo update-rc.d cfn-hup enable
              # Install the files and packages from the metadata
            - '/usr/local/bin/cfn-init'  #'/opt/aws/bin/cfn-init'
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServerInstance '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

              # Signal the status from cfn-init
            - '/usr/local/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServerInstance '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

              # Restart Apache2
            - |
              sudo service apache2 restart
            - |
              wget "https://s3.eu-central-1.amazonaws.com/wp-artifact-frankfurt/CreateWPBuild/CreateWPBuild-1.0.BUILD_NUMBER.tar"
            - |
              echo "=================I'm here======================"
            - |+

#=======Outputs=======
Outputs:
  PublicIp:
    Value: !GetAtt [WebServerInstance, PublicIp]
    Description: Server's PublicIp Address
#  DBEndPoint:
#    Description: Connect to DB instance
#    Value: !GetAtt [DB, Endpoint.Address]
